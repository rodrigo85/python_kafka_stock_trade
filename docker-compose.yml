services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - broker-kafka

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092" # Internal Docker network access
      - "29092:29092" # External access from localhost
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - broker-kafka
    volumes:
      - ./create_kafka_topics.sh:/usr/bin/create_kafka_topics.sh
    command: >
      sh -c "/etc/confluent/docker/run &
             /usr/bin/create_kafka_topics.sh &&
             tail -f /dev/null"

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:9092

  python-app:
    build: ./python-app
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092
    networks:
      - broker-kafka
    volumes:
      - ./python-app:/app
    command: python consumer.py

networks:
  broker-kafka:
    driver: bridge
